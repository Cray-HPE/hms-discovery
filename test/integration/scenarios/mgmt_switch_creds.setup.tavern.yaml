#
# MIT License
#
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
test_name: Populate SLS with management switches

stages:
  - name: Populate x3000c0w10 in SLS
    request:
      url: "{sls_base_url}/v1/hardware/x3000c0w10"
      method: PUT
      json:
        xname: x3000c0w11
        class: River
        ExtraProperties:
          Aliases:
          - "sw-leaf-bmc-001"
          Brand: "Aruba"
          IP4addr: 10.254.0.4
          SNMPAuthPassword: "vault://hms-creds/x3000c0w10"
          SNMPAuthProtocol: "MD5"
          SNMPPrivPassword: "vault://hms-creds/x3000c0w10"
          SNMPPrivProtocol: "DES"
          SNMPUsername: "user-x3000c0w10"
    response:
      status_code:
      - 200
      - 201
  - name: Populate x3000c0w11 in SLS
    request:
      url: "{sls_base_url}/v1/hardware/x3000c0w11"
      method: PUT
      json:
        xname: x3000c0w11
        class: River
        ExtraProperties:
          Aliases:
          - "sw-leaf-bmc-002"
          Brand: "Aruba"
          IP4addr: 10.254.0.5
          SNMPAuthPassword: "vault://hms-creds/x3000c0w11"
          SNMPAuthProtocol: "MD5"
          SNMPPrivPassword: "vault://hms-creds/x3000c0w11"
          SNMPPrivProtocol: "DES"
          SNMPUsername: "user-x3000c0w11"
    response:
      status_code:
      - 200
      - 201
  - name: Populate x3000c0h33s1 in SLS
    request:
      url: "{sls_base_url}/v1/hardware/x3000c0h33s1"
      method: PUT
      json:
        xname: x3000c0h33s1
        class: River
        ExtraProperties:
          Aliases:
          - "sw-spine-001"
          Brand: "Aruba"
          IP4addr: 10.254.0.5
    response:
      status_code:
      - 200
      - 201
  - name: Populate x3000c0h33s2 in SLS
    request:
      url: "{sls_base_url}/v1/hardware/x3000c0h33s2"
      method: PUT
      json:
        xname: x3000c0h33s2
        class: River
        ExtraProperties:
          Aliases:
          - "sw-spine-002"
          Brand: "Aruba"
          IP4addr: 10.254.0.6
    response:
      status_code:
      - 200
      - 201
  - name: Populate d0w1 in SLS
    request:
      url: "{sls_base_url}/v1/hardware/d0w1"
      method: PUT
      json:
        xname: d0w1
        class: River
        ExtraProperties:
          Aliases:
          - "sw-cdu-001"
          Brand: "Aruba"
    response:
      status_code:
      - 200
      - 201
  - name: Populate d0w2 in SLS
    request:
      url: "{sls_base_url}/v1/hardware/d0w2"
      method: PUT
      json:
        xname: d0w2
        class: River
        ExtraProperties:
          Aliases:
          - "sw-cdu-002"
          Brand: "Aruba"
    response:
      status_code:
      - 200
      - 201
---
test_name: Remove existing credentials from Vault

marks:
- parametrize:
    key: xname
    vals:

    # Switches new
    - x3000c0w10
    - x3000c0h33s1
    - d0w1

stages:
  - name: Remove per device credential from Vault
    request:
      url: "{vault_base_url}/v1/secret/hms-creds/{xname}"
      method: DELETE
      verify: false
      headers:
        X-Vault-Request: "true"
        X-Vault-Token: hms
    response:
      status_code: 204

---
test_name: "Populate per-device credentials for existing switches in Vault"
marks:
- parametrize:
    key:
    - xname
    - snmp_username
    - snmn_auth_password
    - smnp_priv_password
    vals:
    # Switches existing
    - [x3000c0w11,   user-x3000c0w11,   auth-x3000c0w11,   priv-x3000c0w11]
    - [x3000c0h33s2, user-x3000c0h33s2, auth-x3000c0h33s2, priv-x3000c0h33s2]
    - [d0w2,         user-d0w2,         auth-d0w2,         priv-d0w2]

stages:
  - name: Populate per-device credential in Vault
    request:
      url: "{vault_base_url}/v1/secret/hms-creds/{xname}"
      method: POST
      verify: false
      headers:
        X-Vault-Request: "true"
        X-Vault-Token: hms
      json:
        Xname: "{xname}"
        Username: "{snmp_username}"
        SNMPAuthPass: "{snmn_auth_password}"
        SNMPPrivPass: "{smnp_priv_password}"
    response:
      status_code: 204
